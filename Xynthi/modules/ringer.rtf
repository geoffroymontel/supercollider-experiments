{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 ArialMT;}
{\colortbl;\red255\green255\blue255;\red250\green235\blue215;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (\
// build synthDef, synthObj, gui, midiCtrls\
\
// synthDef //\
SynthDef(\\bp_1, \{|in=21, out=0|\
		Out.ar(out, In.ar(in));\
\}).send(s);\
\
SynthDef(\\ring_mul, \{|out=0, in=38, ring_in=39, depth=1|\
	Out.ar(out, In.ar(in) * In.ar(ring_in) * depth)\
\}).send(s);\
\
SynthDef(\\ring_ring1, \{|out=0, in=38, ring_in=39, depth=1|\
	Out.ar(out, In.ar(in).ring1(In.ar(ring_in) * depth))\
\}).send(s);\
\
SynthDef(\\ring_ring2, \{|out=0, in=38, ring_in=39, depth=1|\
	Out.ar(out, In.ar(in).ring2(In.ar(ring_in) * depth))\
\}).send(s);\
\
SynthDef(\\ring_ring3, \{|out=0, in=38, ring_in=39, depth=1|\
	Out.ar(out, In.ar(in).ring3(In.ar(ring_in) * depth))\
\}).send(s);\
\
SynthDef(\\ring_ring4, \{|out=0, in=38, ring_in=39, depth=1|\
	Out.ar(out, In.ar(in).ring4(In.ar(ring_in) * depth))\
\}).send(s);\
\
// synthObj //\
~ringer=~busControlledSynth.reproduce;\
~ringer.synthDefName=\\ring_mul;\
~ringer.fastPlay=false;\
~ringer.defaultSettings=1;\
~ringer.makeBusDictionary=\{|self|\
	var bus;\
	bus=Bus.control;\
	self.busDictionary=Dictionary[\
		\\depth -> bus.index\
	];\
	bus.set(self.defaultSettings);\
	self.busarr=bus;\
\};\
// gui //\
~ringerGui=~buildGui.reproduce;\
~ringerGui.synthObj=~ringer;\
~ringerGui.makeGui=\{|self, w|\
	var rings;\
	rings=[\\mul, \\ring1, \\ring2, \\ring3, \\ring4];\
	self.elementDictionary=Dictionary[\
		\\ringtype ->\
		SCPopUpMenu(w, self.elementStyle.popupSize)\
			.items_(rings)\
			.action_(\{|v|\
				self.synthObj.stopSynth;\
				self.synthObj.synthDefName=\\ring_ ++ rings.at(v.value);\
				self.synthObj.playSynth;\
			\})\
	];\
	w.startRow;\
	(self.showIO).if(\{\
		w.vert(\{|v|\
			self.elementDictionary.putAll(Dictionary[\
				\\in ->\
				SCNumberBox(v, self.elementStyle.smallBoxSize)\
					.action_(\{|v| self.synthObj.setArgs(\\in, v.value) \}),\
				\\ring_in ->\
				SCNumberBox(v, self.elementStyle.smallBoxSize)\
					.action_(\{|v| self.synthObj.setArgs(\\ring_in, v.value) \}),\
				\\out ->\
				SCNumberBox(v, self.elementStyle.smallBoxSize)\
					.action_(\{|v| self.synthObj.setArgs(\\out, v.value) \})\
			]);\
		\}, 44@82);\
	\});\
	self.elementDictionary.put(\
		\\depth,\
		EZKnob.new(w, self.elementStyle.knobSize, 'depth', \\amp,\
			\{|v|\
				self.synthObj.setArgs(\\depth, v.value);\
				self.updateMIDI(\\depth, v.value);\
			\},\
			nil,\
			false,\
			self.elementStyle.knobLabel,\
			self.elementStyle.knobNumber\
		)\
	);\
	w.vert(\{|v|\
		self.elementDictionary.putAll(Dictionary[\
			\\play ->\
			ToggleButton(v, " P ", \{ \
				self.synthObj.playSynth;\
			\}, \{ \
				self.synthObj.stopSynth;\
			\}).view,\
			\\mute ->\
			ToggleButton(v, " B ", \{\
				self.synthObj.runSynth(false); \
				self.bpObj=Synth.after(self.synthObj.synthObj, \\bp_1, \
					[\\in, self.synthObj.synthArgDictionary.at(\\in),\
						\\out, self.synthObj.synthArgDictionary.at(\\out)\
					]\
				);\
			\}, \{ \
				self.synthObj.runSynth(true);\
				(self.bpObj.notNil).if(\{ self.bpObj.free \});\
			\}).view\
		]);\
		ActionButton(v, " S ", \{\
			CocoaDialog.savePanel(\{|path|\
				var dict;\
				dict=self.getValues;\
				dict.writeTextArchive(path);\
			\})\
		\});\
		ActionButton(v, " L ", \{\
			CocoaDialog.getPaths(\{|path|\
				self.valueDictionary=Object.readTextArchive(path[0]);\
				self.setValues;\
			\})\
		\});	\
	\}, 20@82);\
\};\
~ringerGui.valueDictionary=Dictionary[\
	\\ringtype -> 0,\
	\\in-> 38, \
	\\ring_in -> 39, \
	\\out -> 0,\
	\\depth -> 1,\
	\\mute -> 0, \
	\\play -> 1\
];\
\
// MIDI\
~ringerMidi = ~incDecMidi.reproduce;\
~ringerMidi.synthObj=~ringerSynth;\
~ringerMidi.guiObj=~ringerGui;\
~ringerMidi.valueDictionary=~ringerGui.valueDictionary.copy;\
~ringerMidi.makeResponder=\{|self|\
	self.responderObj=IncDecResponderBank(\
		self.src,\
		self.chan,\
		self.ccDictionary.at(\\depth), 0.0078, \\amp, \
			\{|s, c, n, v| \
				self.synthObj.setArgs(\\depth, v); \
				self.updateGui(\\depth, v, \\valueNoAction_); \
			\}, \
			self.valueDictionary.at(\\depth)\
	);\
	self.responderObj;\
\};\
\
~ringerInstr=(\
	reproduce: \{|self|\
		var newSelf;\
		newSelf=self.copy;\
		newSelf.theSynth=self.theSynth.reproduce(true);\
		newSelf.theGui=self.theGui.reproduce;\
		newSelf.theGui.synthObj=newSelf.theSynth;\
		newSelf.theMidi=self.theMidi.reproduce;\
		newSelf.theMidi.synthObj=newSelf.theSynth;\
		newSelf.theMidi.guiObj=newSelf.theGui;\
		newSelf;\
	\},\
	theSynth: ~ringer,\
	theGui: ~ringerGui,\
	theMidi: ~ringerMidi,\
	midiOn: \{|self|\
		self.theGui.midiObj=self.theMidi;\
	\}\
)\
)}